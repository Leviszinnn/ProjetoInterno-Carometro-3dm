<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ProjetoInternoCarometro</name>
    </assembly>
    <members>
        <member name="M:ProjetoInternoCarometro.Controllers.LoginController.Login(ProjetoInternoCarometro.ViewModels.LoginViewModel)">
            <summary>
            Valida o usuário
            </summary>
            <param name="login">Objeto login que contém o e-mail e a senha do usuário</param>
            <returns>Retorna um token com as informações do usuário</returns>
            dominio/api/Login
        </member>
        <member name="T:ProjetoInternoCarometro.Interfaces.IAlunoRepository">
            <summary>
            Interface resonsável pela AlunoRepository
            </summary>
        </member>
        <member name="M:ProjetoInternoCarometro.Interfaces.IAlunoRepository.ListarTodos">
            <summary>
            Lista todos os alunos
            </summary>
            <returns>uma lista com todos os alunos</returns>
        </member>
        <member name="M:ProjetoInternoCarometro.Interfaces.IAlunoRepository.Cadastrar(ProjetoInternoCarometro.Domains.Aluno)">
            <summary>
            Cadastra um novo aluno
            </summary>
            <param name="novoAluno">objeto com as informações cadastradas</param>
        </member>
        <member name="M:ProjetoInternoCarometro.Interfaces.IAlunoRepository.Deletar(ProjetoInternoCarometro.Domains.Aluno)">
            <summary>
            Deleta um aluno existente
            </summary>
            <param name="aluno">aluno que será deletado</param>
        </member>
        <member name="M:ProjetoInternoCarometro.Interfaces.IAlunoRepository.Atualizar(System.Int32,ProjetoInternoCarometro.Domains.Aluno)">
            <summary>
            Atualiza um aluno pelo seu id
            </summary>
            <param name="idAluno">id da clinica que será atualizada</param>
            <param name="alunoAtualizado">objeto Clinica com as novas informações</param>
        </member>
        <member name="M:ProjetoInternoCarometro.Interfaces.IAlunoRepository.BuscarId(System.Int32)">
            <summary>
            Busca um aluno pelo seu id
            </summary>
            <param name="idAluno">id do aluno que será buscado</param>
            <returns></returns>
        </member>
        <member name="T:ProjetoInternoCarometro.Interfaces.IProfessorRepository">
            <summary>
            Interface resonsável pelo ProfessorRepository
            </summary>
        </member>
        <member name="M:ProjetoInternoCarometro.Interfaces.IProfessorRepository.Login(System.String,System.String)">
            <summary>
            Valida um usuario
            </summary>
            <param name="email">email do usuario</param>
            <param name="senha">senha do usuario</param>
            <returns>Objeto Usuario que foi encontrado</returns>
        </member>
        <member name="T:ProjetoInternoCarometro.Interfaces.IReconhecimentoRepository">
            <summary>
            Interface resonsável pela ReconhecimentoRepository
            </summary>
        </member>
        <member name="M:ProjetoInternoCarometro.Utils.Upload.UploadFile(Microsoft.AspNetCore.Http.IFormFile,System.String[])">
            <summary>
            Faz o upload do arquivo para o servidor
            </summary>
            <param name="arquivo">Arquivo vindo de um formulário</param>
            <param name="extensoesPermitidas">Array com extensões permitidas apenas</param>
            <returns>Nome do arquivo salvo</returns>
        </member>
        <member name="M:ProjetoInternoCarometro.Utils.Upload.ValidarExtensao(System.String[],System.String)">
            <summary>
            Valida o uso de enxtensões permitidas apenas
            </summary>
            <param name="extensoes">Array de extensões permitidas</param>
            <param name="nomeDoArquivo">Nome do arquivo</param>
            <returns>Verdadeiro/Falso</returns>
        </member>
        <member name="M:ProjetoInternoCarometro.Utils.Upload.RemoverArquivo(System.String)">
            <summary>
            Remove um arquivo do servidor
            </summary>
            <param name="nomeDoArquivo">Nome do Arquivo</param>
        </member>
        <member name="M:ProjetoInternoCarometro.Utils.Upload.RetornarExtensao(System.String)">
            <summary>
            Retorna a extensão de um arquivo
            </summary>
            <param name="nomeDoArquivo">Nome do Arquivo</param>
            <returns>Retorna a extensão de um arquivo</returns>
        </member>
    </members>
</doc>
